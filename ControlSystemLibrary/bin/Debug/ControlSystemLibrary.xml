<?xml version="1.0"?>
<doc>
<assembly>
<name>
ControlSystemLibrary
</name>
</assembly>
<members>
<member name="T:ControlSystemLibrary.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ControlSystemLibrary.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ControlSystemLibrary.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:ControlSystemLibrary.AGV.RobocarStatusName">
 <summary>
 Define the name of all status of AGV - Use with status property
 </summary>
 <returns>Return array of string: "Unknown", "Emergency", "Safety", "Stop", "Out of line", "Battery Empty", "No Cart", "Normal"</returns>
</member>
<member name="P:ControlSystemLibrary.AGV.Enable">
 <summary>
 ***Get or set using status of AGV***
 </summary>
 <value>If the value is true, it mean AGV was used, if it's false, it mean AGV was not used</value>
 <returns>Return using state of AGV</returns>
</member>
<member name="P:ControlSystemLibrary.AGV.Name">
 <summary>
 ***Get or set name of AGV***
 </summary>
 <value>Set new name for AGV</value>
 <returns>Return the current name of AGV</returns>
</member>
<member name="P:ControlSystemLibrary.AGV.Battery">
 <summary>
 ***Set or get array of battery value***
 </summary>
 <returns>Return array of battery value</returns>
 <remarks>The battery value's size is one byte</remarks>
</member>
<member name="P:ControlSystemLibrary.AGV.SupplyPartStatus">
 <summary>
 ***Set new route (Part) or get current route (part) of AGV***
 </summary>
 <returns>Return the current route number of AGV</returns>
</member>
<member name="P:ControlSystemLibrary.AGV.Connecting">
 <summary>
 ******
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ControlSystemLibrary.AGV.#ctor(System.String)">
 <summary>
 Create and return new AGV object, using the specified name
 </summary>
 <param name="name">Name of AGV</param>
</member>
<member name="M:ControlSystemLibrary.AGV.#ctor(System.String,System.UInt32)">
 <summary>
 Create and return new AGV object, using the specified name and address
 </summary>
 <param name="name">Name of AGV</param>
 <param name="address">Address of AGV (32 bits number)</param>
</member>
<member name="M:ControlSystemLibrary.AGV.RequestRoute(System.Byte)">
 <summary>
 Request AGV run in new route
 </summary>
 <param name="Route">New route number</param>
</member>
<member name="M:ControlSystemLibrary.AGV.AGVRun">
 <summary>
 Request AGV run with preview route
 </summary>
</member>
<member name="M:ControlSystemLibrary.AGV.AGVStop">
 <summary>
 Request AGV stop
 </summary>
</member>
<member name="M:ControlSystemLibrary.AGV.SetHostAddress">
 <summary>
 Request AGV remember address of Xbee (In case AGV was been changed)
 </summary>
 <remarks>When user use new AGV, because AGV allways send data to control system, so that we must set the address of Xbee, which control this AGV, for this AGV</remarks>
</member>
<member name="M:ControlSystemLibrary.CIniFile.#ctor(System.String)">
 <summary>
 IniFile Constructor
 </summary>
 <param name="IniPath">The path to the INI file.</param>
</member>
<member name="M:ControlSystemLibrary.CIniFile.ReadValue(System.String,System.String)">
 <summary>
 Read value from INI file
 </summary>
 <param name="section">The section of the file to look in</param>
 <param name="key">The key in the section to look for</param>
</member>
<member name="M:ControlSystemLibrary.CIniFile.WriteValue(System.String,System.String,System.String)">
 <summary>
 Write value to INI file
 </summary>
 <param name="section">The section of the file to write in</param>
 <param name="key">The key in the section to write</param>
 <param name="value">The value to write for the key</param>
</member>
<member name="P:ControlSystemLibrary.XBee.ID">
 <summary>
 Personal area network (PAN) ID
 </summary>
</member>
<member name="P:ControlSystemLibrary.XBee.Address">
 <summary>
 Physical address of Xbee
 </summary>
</member>
<member name="M:ControlSystemLibrary.XBee.#ctor(System.String,System.Int32,System.UInt32,System.Byte)">
 <summary>
 Creates and returns a new XBee object using the specified Port name, baudrate,Xbee address and Xbee PAN ID
 </summary>
 <param name="PortName">The port to use (for example, COM1).</param>
 <param name="PortBaudRate">The baud rate of COM port</param>
 <param name="XBeeAddress">Address of Xbee (32 bit)</param>
 <param name="XBeePID">PAN ID of Xbee</param>
</member>
<member name="M:ControlSystemLibrary.XBee.#ctor(System.UInt32,System.Byte)">
 <summary>
 Creates and returns a new XBee object using the specified Xbee address and Xbee PAN ID
 </summary>
 <param name="XBeeAddress">Address of Xbee (32 bit)</param>
 <param name="XBeePID">PAN ID of Xbee</param>
</member>
<member name="M:ControlSystemLibrary.XBee.#ctor(System.String,System.UInt32,System.Byte)">
 <summary>
 Creates and returns a new XBee object using the specified Port name, Xbee address and Xbee PAN ID
 </summary>
 <param name="PortName">The port to use (for example, COM1).</param>
 <param name="XBeeAddress">Address of Xbee (32 bit)</param>
 <param name="XBeePID">PAN ID of Xbee</param>
 <remarks>The default baudrate of COM port will be 9600</remarks>
</member>
<member name="M:ControlSystemLibrary.XBee.#ctor">
 <summary>
 Creates and returns a new XBee object
 </summary>
 <remarks></remarks>
</member>
<member name="M:ControlSystemLibrary.XBee.SettingPort(System.String,System.Int32)">
 <summary>
 Set port for Xbee
 </summary>
 <param name="name">Port name</param>
 <param name="BaudRate">Port's Baudrate</param>
 <remarks></remarks>
</member>
<member name="M:ControlSystemLibrary.XBee.kbhit">
 <summary>
 Gets a value indicating the status of receive buffer in Xbee object
 </summary>
 <returns>Return true if there are some data in receive buffer, if receive buffer is empty, return false</returns>
</member>
<member name="M:ControlSystemLibrary.XBee.tbe">
 <summary>
 Gets a value indicating the status of transmit buffer in Xbee object
 </summary>
 <returns>Return true if transmit buffer isn't full, it mean we can put more data to transmit buffer, if transmit buffer is full, return false</returns>
</member>
<member name="M:ControlSystemLibrary.XBee.putd(ControlSystemLibrary.XBee.XBeeDataStruct)">
 <summary>
 Put the specified data to transmit buffer in Xbee
 </summary>
 <param name="XbeeData">The data was been send</param>
 <returns>Return true if success, false if it failure (Transmit buffer is full) </returns>
 <remarks></remarks>
</member>
<member name="M:ControlSystemLibrary.XBee.getd">
 <summary>
 Get the data from receive buffer of Xbee object
 </summary>
 <returns>Return data if success, return nothing if failure</returns>
 <remarks></remarks>
</member>
</members>
</doc>
